import java.util.Arrays;

public class MergeSortedArrays {
    public static int[] mergeSortedArrays(int[] arr1, int[] arr2) {
        int m = arr1.length;
        int n = arr2.length;
        int[] mergedArray = new int[m + n]; // Initialize a new array to store the merged result

        int i = m - 1;
        int j = n - 1;
        int k = m + n - 1;

        // Merge arrays in descending order
        while (i >= 0 && j >= 0) {
            if (arr1[i] > arr2[j]) {
                mergedArray[k] = arr1[i];
                i--;
            } else {
                mergedArray[k] = arr2[j];
                j--;
            }
            k--;
        }

        // Copy remaining elements from arr2 to mergedArray
        while (j >= 0) {
            mergedArray[k] = arr2[j];
            j--;
            k--;
        }

        // Copy remaining elements from arr1 to mergedArray (no need to check i, as it is already sorted)
        while (i >= 0) {
            mergedArray[k] = arr1[i];
            i--;
            k--;
        }

        return mergedArray;
    }

    public static void main(String[] args) {
        int[] arr1 = {1, 3, 5, 7,9};
        int[] arr2 = {2, 4, 6, 8};

        int[] arr3 = mergeSortedArrays(arr1, arr2);

        System.out.print("Merged Array: ");
        System.out.println(Arrays.toString(arr3));
    }
}
